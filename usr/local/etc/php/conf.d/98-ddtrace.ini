
; Enables or disables tracing (set by the installer, do not change it)
extension = ddtrace.so

; Enables the profiling module
extension = datadog-profiling.so

; Enables the appsec module
extension = ddappsec.so

; Enable the Datadog profiling module.
;datadog.profiling.enabled = 1

; Whether to enable the endpoint data collection in profiles.
;datadog.trace.endpoint_collection_enabled = 1

; Enable the CPU profile type.
;datadog.profiling.experimental_cpu_time_enabled = 1

; Enable the allocation profile type.
;datadog.profiling.allocation_enabled = 1

; Enable the allocation profile type. Superseded by `datadog.profiling.allocation_enabled`.
;datadog.profiling.experimental_allocation_enabled = 1

; Enable the exception profile type.
;datadog.profiling.exception_enabled = 1

; Enable the exception profile type. Superseded by `datadog.profiling.exception_enabled`.
;datadog.profiling.experimental_exception_enabled = 1

; Sampling distance for exception profiling (the higher the distance, the fewer samples are created).
;datadog.profiling.exception_sampling_distance = 100

; Sampling distance for exception profiling (the higher the distance, the fewer samples are created). Superseded by `datadog.profiling.exception_sampling_distance`.
;datadog.profiling.experimental_exception_sampling_distance = 100

; Set the profiler’s log level. Acceptable values are off, error, warn, info, debug, and trace. The profiler’s logs are written to the standard error stream of the process.
;datadog.profiling.log_level = off

; Enable the timeline profile type.
;datadog.profiling.timeline_enabled = 1

; Path to the request init hook (set by the installer, do not change it)
datadog.trace.sources_path = /opt/datadog/dd-library/1.2.0/dd-trace-sources/src

; Enables or disables tracing. On by default
;datadog.trace.enabled = On

; Enable or disable tracing of CLI scripts. Off by default
;datadog.trace.cli_enabled = Off

; For long running processes, this setting has to be set to On
;datadog.trace.auto_flush_enabled = Off

; For long running processes, this setting has to be set to Off
;datadog.trace.generate_root_span = On

; Enables or disables debug mode.  When On logs are printed to the error_log
;datadog.trace.debug = Off

; Enables startup logs, including diagnostic checks
;datadog.trace.startup_logs = On

; Sets a custom service name for the application
;datadog.service = unnamed-php-service

; Sets a custom environment name for the application
;datadog.env = my_env

; Sets a version for the user application, not the datadog php library
;datadog.version = 1.0.0

; Configures the agent host. If you need more flexibility use `datadog.trace.agent_url` instead
;datadog.agent_host = 127.0.0.1

; Configures the agent port. If you need more flexibility use `datadog.trace.agent_url` instead
;datadog.trace.agent_port = 8126

; Configures the dogstatsd agent port
;datadog.dogstatsd_port = 8125

; When set, `datadog.trace.agent_url` has priority over `datadog.agent_host` and `datadog.trace.agent_port`
;datadog.trace.agent_url = http://127.0.0.1:8126

; Sets the service name of spans generated for HTTP clients' requests to host-<hostname>
;datadog.trace.http_client_split_by_domain = Off

; Enables URL to resource name normalization. For more details see:
; https://docs.datadoghq.com/tracing/setup_overview/setup/php/?tab=containers#map-resource-names-to-normalized-uri
;datadog.trace.url_as_resource_names_enabled = On

; Configures obfuscation patterns based on regex. For more details see:
; https://docs.datadoghq.com/tracing/setup_overview/setup/php/?tab=containers#map-resource-names-to-normalized-uri
;datadog.trace.resource_uri_fragment_regex = 

; Configures obfuscation path fragments for incoming requests. For more details see:
; https://docs.datadoghq.com/tracing/setup_overview/setup/php/?tab=containers#map-resource-names-to-normalized-uri
;datadog.trace.resource_uri_mapping_incoming = 

; Configures obfuscation path fragments for outgoing requests. For more details see:
; https://docs.datadoghq.com/tracing/setup_overview/setup/php/?tab=containers#map-resource-names-to-normalized-uri
;datadog.trace.resource_uri_mapping_outgoing = 

; Changes the default name of an APM integration. Rename one or more integrations at a time, for example:
; "pdo:payments-db,mysqli:orders-db"
;datadog.service_mapping = 

; Tags to be set on all spans, for example: "key1:value1,key2:value2"
;datadog.tags = 

; The sampling rate for the trace. Valid values are between 0.0 and 1.0
;datadog.trace.sample_rate = 1.0

; The sampling rate for the trace. Valid values are between 0.0 and 1.0
;datadog.trace.sample_rate = 1.0

; A JSON encoded string to configure the sampling rate.
; Examples:
;   - Set the sample rate to 20%: '[{"sample_rate": 0.2}]'.
;   - Set the sample rate to 10% for services starting with `a` and span name `b` and set the sample rate to 20%
;     for all other services: '[{"service": "a.*", "name": "b", "sample_rate": 0.1}, {"sample_rate": 0.2}]'
; **Note** that the JSON object must be included in single quotes (') to avoid problems with escaping of the
; double quote (") character.
;datadog.trace.sampling_rules = 

; Whether a specific integration is enabled.
; Integrations names available at: see https://docs.datadoghq.com/tracing/setup_overview/setup/php/?tab=containers#integration-names
;datadog.trace.<integration_name>_enabled = On

; Whether analytics for the integration is enabled.
; Integrations names available at: see https://docs.datadoghq.com/tracing/setup_overview/setup/php/?tab=containers#integration-names
;datadog.trace.<integration_name>_analytics_enabled = Off

; Sampling rate for analyzed spans. Valid values are between 0.0 and 1.0.
; Integrations names available at: see https://docs.datadoghq.com/tracing/setup_overview/setup/php/?tab=containers#integration-names
;datadog.trace.<integration_name>_analytics_sample_rate = 1.0

; Enables distributed tracing
;datadog.distributed_tracing = On

; Global switch for trace analytics
;datadog.trace.analytics_enabled = Off

; Set connection timeout in milliseconds while connecting to the agent
;datadog.trace.bgs_connect_timeout = 2000

; Set request timeout in milliseconds while sending payloads to the agent
;datadog.trace.bgs_timeout = 5000

; datadog.trace.spans_limit = 1000
;datadog.trace.spans_limit = 1000

; Only for Linux. Set to `true` to retain capabilities on Datadog background threads when you change the effective
; user ID. This option does not affect most setups, but some modules - to date Datadog is only aware of Apache`s
; mod-ruid2 - may invoke `setuid()` or similar syscalls, leading to crashes or loss of functionality as it loses
; capabilities.
; **Note** Enabling this option may compromise security. This option, standalone, does not pose a security risk.
; However, an attacker being able to exploit a vulnerability in PHP or web server may be able to escalate privileges
; with relative ease, if the web server or PHP were started with full capabilities, as the background threads will
; retain their original capabilities. Datadog recommends restricting the capabilities of the web server with the
; setcap utility.
;datadog.trace.retain_thread_capabilities = Off

; Enables or disables the loaded dd-appsec extension.
; If disabled, the extension will do no work during the requests.
; If not present/commented out, appsec will be enabled/disabled by remote config
;datadog.appsec.enabled = Off

; Sets the verbosity of the logs of the dd-appsec extension.
; The valid values are 'off', 'error', 'fatal', 'warn' (or 'warning'), 'info',
; 'debug' and 'trace', in increasing order of verbosity
;datadog.appsec.log_level = warn

; The destination of the log messages. Valid values are 'php_error_reporting'
; (issues PHP notices or warnings), 'syslog', 'stdout', 'stderr', or an
; arbitrary file name to which the messages will be appended
;datadog.appsec.log_file = php_error_reporting

; The dd-appsec extension communicates with a helper process via UNIX sockets.
; This setting determines whether the extension should try to launch the daemon
; in case it cannot obtain a connection.
; If this is disabled, the helper should be launched through some other method.
; The extension expects the helper to run under the same user as the process
; where PHP is running, and will verify it.
;datadog.appsec.helper_launch = On

; If ddappsec.helper_launch is enabled, this setting determines which binary
; the extension should try to execute.
; Only relevant if ddappsec.helper_launch is enabled.
; This ini setting is configured by the installer
datadog.appsec.helper_path = /opt/datadog/dd-library/1.2.0/bin/ddappsec-helper

; Additional arguments that should be used when attempting to launch the helper
; process. The extension always passes '--lock_path - --socket_path fd:<int>'
; The arguments should be space separated. Both single and double quotes can
; be used should an argument contain spaces. The backslash (\) can be used to
; escape spaces, quotes, and the backslash itself.
; Only relevant if ddappsec.helper_launch is enabled
;datadog.appsec.helper_extra_args = 

; The path to the rules json file. The helper process must be able to read the
; file. This ini setting is configured by the installer
; datadog.appsec.rules = /opt/datadog/dd-library/1.2.0/etc/recommended.json

; The location to the UNIX socket that extension uses to communicate with the
; helper and the lock file that the extension processes will use to
; synchronize the launching of the helper.
; Only relevant if datadog.appsec.helper_launch is enabled
;datadog.appsec.helper_runtime_path = /tmp/

; The location of the log file of the helper. This default to /dev/null (the log
; messages will be discarded). This file is opened by the extension just before
; launching the daemon and the file descriptor is passed to the helper as its
; stderr, to which it will write its messages; this setting is therefore only
; relevant if ddappsec.helper_launch is enabled
;datadog.appsec.helper_log_file = /dev/null

; Enables or disables remote configuration. On by default
;datadog.remote_config_enabled = On

; In milliseconds, the period at which the agent is polled for new configurations
;datadog.remote_config_poll_interval = 1000

; Customises the HTML output provided on a blocked request
;datadog.appsec.http_blocked_template_html = 

; Customises the JSON output provided on a blocked request
;datadog.appsec.http_blocked_template_json = 
